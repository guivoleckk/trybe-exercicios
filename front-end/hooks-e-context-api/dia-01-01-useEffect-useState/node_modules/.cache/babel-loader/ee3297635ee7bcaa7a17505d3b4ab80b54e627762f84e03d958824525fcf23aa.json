{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/\\xC1rea de Trabalho/hooks/hooks-treino/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const INITIAL_STATE = [{\n    id: 0,\n    title: '',\n    status: 0\n  }];\n  const [email, setEmail] = useState(INITIAL_STATE);\n  useEffect(() => {\n    setEmail([{\n      id: 1,\n      title: 'teste1',\n      status: 0\n    }, {\n      id: 2,\n      title: 'teste2',\n      status: 0\n    }, {\n      id: 3,\n      title: 'teste3',\n      status: 0\n    }]);\n  }, []);\n  const handleClickRead = indexClicked => {\n    setEmail(prevState => prevState.map((email, index) => index === indexClicked ? {\n      ...email,\n      status: 1\n    } : email));\n  };\n  const handleUnreadClicked = indexClicked => {\n    setEmail(prevState => prevState.map((email, index) => index === indexClicked ? {\n      ...email,\n      status: 0\n    } : email));\n  };\n  useEffect(() => {\n    const allRead = email.every(email => email.status === 1);\n    if (allRead) {\n      window.alert('Parabéns!Todos os emails foram lidos');\n    }\n  }, [email]);\n  const allEmailRead = () => {\n    setEmail(oldState => oldState.map(email => ({\n      ...email,\n      status: 1\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => allEmailRead(),\n      children: \"Marcar todos como lidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Marcar todos como n\\xE3o lidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [email.map((_ref, index) => {\n        let {\n          title,\n          status\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClickRead(index),\n            children: \"lido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUnreadClicked(index),\n            children: \"n\\xE3o lido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IYj1Rm5GaqA7Uhk4kvKDYmj6kdY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","INITIAL_STATE","id","title","status","email","setEmail","handleClickRead","indexClicked","prevState","map","index","handleUnreadClicked","allRead","every","window","alert","allEmailRead","oldState","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_ref","_c","$RefreshReg$"],"sources":["/home/guilherme/Área de Trabalho/hooks/hooks-treino/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const INITIAL_STATE = [{\n    id: 0,\n    title: '',\n    status: 0,\n  }]\n  const [email, setEmail] = useState(INITIAL_STATE);\n\n  useEffect(() => {\n    setEmail([\n      { id: 1, title: 'teste1', status: 0 },\n      { id: 2, title: 'teste2', status: 0 },\n      { id: 3, title: 'teste3', status: 0 },\n    ])\n\n  }, []) \n\n  const handleClickRead = (indexClicked) => {\n    setEmail((prevState) => (\n      prevState\n      .map((email, index) => \n      index === indexClicked ? {...email, status: 1} : email )\n    ))\n  }\n\n  const handleUnreadClicked = (indexClicked) => {\n    setEmail((prevState) => (\n      prevState.map((email, index) => \n      index === indexClicked ? { ...email, status: 0 } : email,\n      )\n    ))\n  }\n\n  useEffect(() => {\n    const allRead = email.every((email) => email.status === 1);\n    if (allRead){\n      window.alert('Parabéns!Todos os emails foram lidos')\n    } \n  }, [email])\n\n  const allEmailRead = () => {\n    setEmail((oldState) => oldState.map((email) => ({ ...email, status: 1 })))\n  };\n\n  return (\n    <>\n    <button\n    onClick={ () => allEmailRead() }\n    >Marcar todos como lidos\n    </button>\n    <button>\n      Marcar todos como não lidos\n    </button>\n    <div>\n      {email.map(({ title, status }, index) => (\n        <div \n        key={ index }>\n          { title }\n          <button\n          onClick={ () => handleClickRead(index) }\n          >\n            lido\n          </button>\n          <button\n          onClick={ () => handleUnreadClicked(index) }\n          >\n            não lido\n          </button>\n          <span>{ status }</span>\n        </div>\n      ))\n      }\n      <div>\n        \n      </div>\n    </div>\n    </>\n  )\n\n}\n\nexport default App; \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}