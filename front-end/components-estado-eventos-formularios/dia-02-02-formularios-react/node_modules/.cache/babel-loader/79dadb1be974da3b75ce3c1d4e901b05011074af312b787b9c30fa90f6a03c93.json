{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/\\xC1rea de Trabalho/react-form/sd-029-b-exercise-react-form/src/components/AddressForm.js\";\n// src/components/AddressForm.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// importando arquivo já existente no projeto com os estados brasileiros\nimport states from '../countryStates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AddressForm extends React.Component {\n  render() {\n    const {\n      formState,\n      onChange\n    } = this.props;\n    const {\n      address,\n      city,\n      countryState,\n      addressType\n    } = formState;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Dados de Endere\\xE7o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: [\"Endere\\xE7o\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"address\",\n          type: \"text\",\n          name: \"address\",\n          maxLength: \"200\",\n          required: true,\n          value: address,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: [\"Cidade\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          type: \"text\",\n          name: \"city\",\n          maxLength: \"28\",\n          required: true,\n          value: city,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"countryState\",\n        children: [\"Estado\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"countryState\",\n          name: \"countryState\",\n          required: true,\n          onChange: onChange,\n          value: countryState,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), states.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"house\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"house\",\n          name: \"addressType\",\n          value: \"Casa\",\n          checked: addressType === 'Casa',\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \"Casa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"apart\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"apart\",\n          name: \"addressType\",\n          value: \"Apartamento\",\n          checked: addressType === 'Apartamento',\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \"Apartamento\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\nAddressForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  formState: PropTypes.shape({\n    address: PropTypes.string,\n    city: PropTypes.string,\n    countryState: PropTypes.string,\n    addressType: PropTypes.string\n  }).isRequired\n};\nexport default AddressForm;","map":{"version":3,"names":["React","PropTypes","states","AddressForm","Component","render","formState","onChange","props","address","city","countryState","addressType","map","value","propTypes","func","isRequired","shape","string"],"sources":["/home/guilherme/Área de Trabalho/react-form/sd-029-b-exercise-react-form/src/components/AddressForm.js"],"sourcesContent":["// src/components/AddressForm.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// importando arquivo já existente no projeto com os estados brasileiros\nimport states from '../countryStates';\n\nclass AddressForm extends React.Component {\n  render() {\n    const { formState, onChange } = this.props;\n\n    const {\n      address,\n      city,\n      countryState,\n      addressType,\n    } = formState;\n\n    return (\n      <fieldset>\n        <legend>Dados de Endereço</legend>\n        <label htmlFor=\"address\">\n          Endereço\n          <input\n            id=\"address\"\n            type=\"text\"\n            name=\"address\"\n            maxLength=\"200\"\n            required\n            value={ address }\n            onChange={ onChange }\n          />\n        </label>\n        <label htmlFor=\"city\">\n          Cidade\n          <input\n            id=\"city\"\n            type=\"text\"\n            name=\"city\"\n            maxLength=\"28\"\n            required\n            value={ city }\n            onChange={ onChange }\n          />\n        </label>\n        <label htmlFor=\"countryState\">\n          Estado\n          <select\n            id=\"countryState\"\n            name=\"countryState\"\n            required\n            onChange={ onChange }\n            value={ countryState }\n          >\n            <option value=\"\">Selecione</option>\n            {\n              states.map((value) => (\n                <option key={ value }>{ value }</option>\n              ))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"house\">\n          <input\n            type=\"radio\"\n            id=\"house\"\n            name=\"addressType\"\n            value=\"Casa\"\n            checked={ addressType === 'Casa' }\n            onChange={ onChange }\n          />\n          Casa\n        </label>\n        <label htmlFor=\"apart\">\n          <input\n            type=\"radio\"\n            id=\"apart\"\n            name=\"addressType\"\n            value=\"Apartamento\"\n            checked={ addressType === 'Apartamento' }\n            onChange={ onChange }\n          />\n          Apartamento\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nAddressForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  formState: PropTypes.shape({\n    address: PropTypes.string,\n    city: PropTypes.string,\n    countryState: PropTypes.string,\n    addressType: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AddressForm;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,MAAM,MAAM,kBAAkB;AAAC;AAEtC,MAAMC,WAAW,SAASH,KAAK,CAACI,SAAS,CAAC;EACxCC,MAAM,GAAG;IACP,MAAM;MAAEC,SAAS;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAE1C,MAAM;MACJC,OAAO;MACPC,IAAI;MACJC,YAAY;MACZC;IACF,CAAC,GAAGN,SAAS;IAEb,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC,eAClC;QAAO,OAAO,EAAC,SAAS;QAAA,uCAEtB;UACE,EAAE,EAAC,SAAS;UACZ,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,SAAS;UACd,SAAS,EAAC,KAAK;UACf,QAAQ;UACR,KAAK,EAAGG,OAAS;UACjB,QAAQ,EAAGF;QAAU;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAO,OAAO,EAAC,MAAM;QAAA,kCAEnB;UACE,EAAE,EAAC,MAAM;UACT,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,IAAI;UACd,QAAQ;UACR,KAAK,EAAGG,IAAM;UACd,QAAQ,EAAGH;QAAU;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAO,OAAO,EAAC,cAAc;QAAA,kCAE3B;UACE,EAAE,EAAC,cAAc;UACjB,IAAI,EAAC,cAAc;UACnB,QAAQ;UACR,QAAQ,EAAGA,QAAU;UACrB,KAAK,EAAGI,YAAc;UAAA,wBAEtB;YAAQ,KAAK,EAAC,EAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmB,EAEjCT,MAAM,CAACW,GAAG,CAAEC,KAAK,iBACf;YAAA,UAAwBA;UAAK,GAAfA,KAAK;YAAA;YAAA;YAAA;UAAA,QACpB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAEG;MAAA;QAAA;QAAA;QAAA;MAAA,QACH,eACR;QAAO,OAAO,EAAC,OAAO;QAAA,wBACpB;UACE,IAAI,EAAC,OAAO;UACZ,EAAE,EAAC,OAAO;UACV,IAAI,EAAC,aAAa;UAClB,KAAK,EAAC,MAAM;UACZ,OAAO,EAAGF,WAAW,KAAK,MAAQ;UAClC,QAAQ,EAAGL;QAAU;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QAEI,eACR;QAAO,OAAO,EAAC,OAAO;QAAA,wBACpB;UACE,IAAI,EAAC,OAAO;UACZ,EAAE,EAAC,OAAO;UACV,IAAI,EAAC,aAAa;UAClB,KAAK,EAAC,aAAa;UACnB,OAAO,EAAGK,WAAW,KAAK,aAAe;UACzC,QAAQ,EAAGL;QAAU;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QAEI;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAEf;AACF;AAEAJ,WAAW,CAACY,SAAS,GAAG;EACtBR,QAAQ,EAAEN,SAAS,CAACe,IAAI,CAACC,UAAU;EACnCX,SAAS,EAAEL,SAAS,CAACiB,KAAK,CAAC;IACzBT,OAAO,EAAER,SAAS,CAACkB,MAAM;IACzBT,IAAI,EAAET,SAAS,CAACkB,MAAM;IACtBR,YAAY,EAAEV,SAAS,CAACkB,MAAM;IAC9BP,WAAW,EAAEX,SAAS,CAACkB;EACzB,CAAC,CAAC,CAACF;AACL,CAAC;AAED,eAAed,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}